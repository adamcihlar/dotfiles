# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE 'vim|lf|ranger' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE 'vim|lf|ranger' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE 'vim|lf|ranger' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE 'vim|lf|ranger' && tmux send-keys C-l) || tmux select-pane -R"

# Letting everyone know huch much colors I have :D
set -g default-terminal "xterm-256color"

# This is toggle for synchronizing (writing to all panes)
# bind -n C-s setw synchronize-panes


# Resizing panes with
bind -n M-down resize-pane -D 1
bind -n M-up resize-pane -U 1
bind -n M-right resize-pane -R 1
bind -n M-left resize-pane -L 1

# This should be faster scrolling
set -g mouse on

set-option -g status-keys vi
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi WheelUpPane send-keys -X halfpage-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X halfpage-down

# Have vimlike split commands
# New window with default path set to last path
bind s split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Better keybindings for copying
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -Tcopy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "~/dotfiles/utils/copy"
setw -g mode-keys vi
unbind -T copy-mode-vi MouseDragEnd1Pane

# Set default shell
if-shell "test -f /usr/local/bin/zsh" "set-option -g default-shell /usr/local/bin/zsh"
if-shell "test -f /bin/zsh" "set-option -g default-shell /bin/zsh"


# pane movement
#bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
#bind-key t command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Browser-like tabbing - Added as send hex in iterm2: determine hexes by `xxd -psd`
#set-option -gw xterm-keys on
#bind-key -n C-Tab next-window
#bind-key -n C-S-tab run "tmux previous-window"

#bind m previous-window

# Better scroll depth
set -g history-limit 99999


# Add tmuxline
#if-shell "test -f ~/dotfiles/.tmuxline" "source ~/dotfiles/.tmuxline"

# Make the prefix more usable
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Customization of splitting borders
#set -g pane-border-style fg=default
#set -g pane-active-border-style fg=default
#set -g pane-active-border-style bg=default

set-option -sg escape-time 10

# Have vimlike split commands
#bind v split-window -h
#bind s split-window -v
unbind '"'
unbind %

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'

set -g @continuum-restore 'on'
set -g @continuum-boot 'on'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)

############# FROM HERE IT WAS NOT PART OF MY TMUX CONFIG ON MAC

# scrollback size
#set -g history-limit 10000

################################
# Keybinds
###############################

# Changing ctrl b to ctrl a as the command button
#unbind C-b
#set -g prefix C-a

# set first window to index 1 (not 0) to map more to the keyboard layout
#comment set -g base-index 1
#comment set -g pane-base-index 1

# pass through xterm keys
#comment set -g xterm-keys on

# Keep your finger on ctrl, or don't, same result
#comment bind-key C-d detach-client
#comment bind-key C-p paste-buffer

# Redraw the client (if interrupted by wall, etc)
#comment bind R refresh-client

# reload tmux config with ctrl + a + r
 #comment unbind r
 #comment bind r \
     source-file ~/.tmux.conf \;\
         display 'Reloaded tmux config.'

# Vertical splits with g or C-g
#comment unbind g 
#comment unbind C-g
#comment bind-key g split-window -h
#comment bind-key C-g split-window -h

# Horizontal splits with v or C-h
#comment unbind h
#comment unbind C-h
#comment bind-key h split-window
#comment bind-key C-h split-window

# Ctrl + a + o rename window
# unbind o
# unbind C-o
# bind-key C-o rename-window

# Using the mouse to switch panes
#comment set -g mouse-utf8 on
#comment set -g mouse on

# Ctrl - t or t new window
#comment unbind t
#comment unbind C-t
#comment bind-key t new-window
#comment bind-key C-t new-window

# Ctrl - w or w to kill panes
#comment unbind w
#comment unbind C-w
#comment bind-key w kill-pane
#comment bind-key C-w kill-pane

# C + control q to kill session
#comment unbind q
#comment unbind C-q
#comment bind-key q kill-session
#comment bind-key C-q kill-session

# Switching panes with alt
#comment bind -n M-Left select-pane -L
#comment bind -n M-Right select-pane -R
#comment bind -n M-Up select-pane -U
#comment bind -n M-Down select-pane -D

# Ctrl + a + n : New session
#comment unbind n
#comment unbind C-n
#comment bind-key n new-session
#comment bind-key C-n new-session

# Ctrl + a + Pagedown : Next window
#unbind Pagedown
#comment unbind Pagedown
#comment bind-key Pagedown next-window

# Ctrl + a + Pagup : Previous window
#unbind Pageup
#comment unbind Pageup
#comment bind-key Pageup previous-window

# Zoom with ctrl + a + ctrl + '+'
#unbind C-+
#bind C-+ \
#new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read'\;\
#swap-pane -s tmux-zoom.0 \;\
#select-window -t tmux-zoom

# Zoom back ctrl + a + ctrl + '-'
#unbind C--
#bind C-- \
#	last-window \;\
#	swap-pane -s tmux-zoom.0 \;\
#	kill-window -t tmux-zoom

# Visual Activity Monitoring between windows
#comment setw -g monitor-activity on
#comment set -g visual-activity on

# Show tmux positions in titles
#comment set -g set-titles on

# Set up a basic panel structure for command + ctr D
#comment bind D source-file ~/.tmux/dev

# Attach to a session if runs otherwise create a new one
#comment new-session -n $HOST

# Copy from tmux to system clipboard
# Needs xclip -> sudo apt install xclip
# bind -t vi-copy y copy-pipe "xclip -sel clip -i"

#####################################
# Plugins
#https://github.com/tmux-plugins/tpm
####################################

#####################################
# tpm plugin manager
# https://github.com/tmux-plugins/tpm 
#####################################
#comment set -g @plugin 'tmux-plugins/tpm'

#####################################
# tmux-sensible - basline settings that get overwritten from .tmux.conf
# https://github.com/tmux-plugins/tmux-sensible
######################################
#set -g @plugin 'tmux-plugins/tmux-sensible'

#####################################
# tmux-resurrect - save and reload sessions and windows after a restart
# https://github.com/tmux-plugins/tmux-resurrect
# Default keybinds : save - command + c + s && restore command + c + r
######################################
#comment set -g @plugin 'tmux-plugins/tmux-resurrect'
### tmux-resurrect extra settings ###
# keep vim sessions after reboot
#comment set -g @resurrect-strategy-vim 'session'
# keep pane contents
#comment set -g @resurrect-capture-pane-contents 'on'
# restore bash history
#comment set -g @resurrect-save-bash-history 'on'
### /tmux-resurrect extra settings ###

######################################
# tmux-continuum - automatically save and restore tmux sessions
# https://github.com/tmux-plugins/tmux-continuum
#####################################
#comment set -g @plugin 'tmux-plugins/tmux-continuum'
# Restore last saved enviroment
#comment set -g @continuum-restore 'on'
# Set autosave interval
#comment set -g @continuum-save-interval '5'
# Show continiuum state in statusbar
#set -g status-right 'Continuum status: #{continuum_status}'
# Starting tmux with system https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/automatic_start.md

######################################
# tmux-yank - advanced copy mode
# https://github.com/tmux-plugins/tmux-yank
#####################################
#comment set -g @plugin 'tmux-plugins/tmux-yank'

# initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)


############# UP TO HERE IT WAS NOT PART OF MY TMUX CONFIG ON MAC


run '~/.tmux/plugins/tpm/tpm'
